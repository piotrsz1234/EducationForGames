@model List<Question>
@inject HttpHelper helper

@{
	ViewData["Title"] = "Teacher's Index";

	string GetBeginning (string t) {
		if (t.Length <= 100) return t;
		return t.Substring (0, 97) + "...";
	}

	async Task<string> PercentAsync (Guid questionID) {
		float response = await helper.Get<float> ($"GoodAnswersPercent/{questionID}");
		if (response == 0f) return "0%";
		response *= 10;
		response = (float) Math.Round (response, 2);
		return (response + "%");
	}

}

<table class="table table-hover">
	<thead>
		<tr>
			<th scope="col">Question</th>
			<th scope="col">Percent of good answers</th>
			<th scope="col">Edit</th>
			<th scope="col">Delete</th>
			<th scope="col">Stats</th>
		</tr>
	</thead>
	<tbody>
		@foreach (var item in Model) {
			<tr>
				<td>@GetBeginning(item.QuestionText)</td>
				<td scope="col">@await PercentAsync(item.ID)</td>
				<td scope="col">
				
					<a href="Question/Edit/@item.ID">
						<div class="btn btn-success">
							<i class="material-icons">edit</i>
						</div>
					</a>
				
				</td>
				<td scope="col">
					<a href="Question/Delete/@item.ID">
						<div class="btn btn-danger">
							<i class="material-icons">delete</i>
						</div>
					</a>
				</td>
				<td>
					<a href="Question/Stats/@item.ID">
						<div class="btn btn-info">
							<i class="material-icons">timeline</i>
						</div>
					</a>
				</td>
			</tr>
		}
	</tbody>
</table>